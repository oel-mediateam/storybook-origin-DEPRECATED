package  com.ListRenderer {	import fl.controls.listClasses.CellRenderer;	import flash.events.*;	import flash.text.TextFormat;	import flash.events.MouseEvent;	import fl.core.UIComponent;	import fl.controls.listClasses.ICellRenderer;		public class MyRenderer extends CellRenderer {				private var tf:TextFormat = new TextFormat();		private var af:TextFormat = new TextFormat();		private var of:TextFormat = new TextFormat("Arial,Helvetica,sans-serif",14,0xFFFFFF);				public function MyRenderer() {			super();		}				override protected function drawTextFormat():void {			var uiStyles:Object = UIComponent.getStyleDefinition();            var defaultTF:TextFormat = enabled ? uiStyles.defaultTextFormat as TextFormat : uiStyles.defaultDisabledTextFormat as TextFormat;            textField.setTextFormat(defaultTF);                       var tf:TextFormat = getStyleValue(enabled?"textFormat":"disabledTextFormat") as TextFormat;                       if(selected){                tf = of;            }			            if (tf != null) {                textField.setTextFormat(tf);            } else {                tf = defaultTF;            }            textField.defaultTextFormat = tf;		}				override public function set data(newData:Object):void {			var originalStyles:Object = CellRenderer.getStyleDefinition();						_data = newData;						tf.font "Arial,Helvetica,sans-serif";			tf.size = 12;			tf.color = 0x000000;						af.font "Arial,Helvetica,sans-serif";			af.size = 14;			af.color = 0x333333;								setStyle("upSkin", originalStyles.upSkin);			setStyle("downSkin", originalStyles.downSkin);			setStyle("overSkin", originalStyles.overSkin);			setStyle("selectedUpSkin", originalStyles.selectedUpSkin);			setStyle("selectedDownSkin", originalStyles.selectedDownSkin);			setStyle("selectedOverSkin", originalStyles.selectedOverSkin);						if (_data.v_enabled == "false") {				setStyle("textFormat", tf);				mouseEnabled = false;			} else if (_data.v_enabled == "true") {				setStyle("textFormat", af);				mouseEnabled = true;			} else {				setStyle("textFormat", af);				mouseEnabled = true;			}					}			}	}